name: Build

on:
  push:
    branches: [master]
  pull_request:

jobs:
  api-build:
    name: Build backend 🏗️
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: 17

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Build backend
        run: ./gradlew bootJar

      - name: Tar build
        run: tar -czf ~/backend.tgz ./build

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: backend
          path: |
            ~/backend.tgz

  backend-docker:
    name: Backend docker 🐬
    needs: [api-build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: benjlevesque/short-sha@v2.1
        id: short-sha

      - name: Download backend build result
        uses: actions/download-artifact@v2
        with:
          name: backend
          path: ~/

      - name: Untar it
        run: |
          tar -xzf ~/backend.tgz ./build

      - name: cp build
        run: |
          sudo cp -R ./build ./api/build

      - name: list
        run: |
          sudo tree -a

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build Docker image
        run: docker build ./api --tag ${{ secrets.REGISTRY_USERNAME }}/graph-api:${{ steps.short-sha.outputs.sha }} --build-arg=GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD) --build-arg=GIT_COMMIT=${SHORT_SHA}
      - name: Push Docker image
        run: docker push ${{ secrets.REGISTRY_USERNAME }}/graph-api:${{ steps.short-sha.outputs.sha }}

  deployment:
    name: Deployment 🚀
    runs-on: ubuntu-latest
    needs: [backend-docker]
    steps:
      - uses: actions/checkout@v3
      - uses: imranismail/setup-kustomize@v2
      - name: Creat application-live.properties file
        run: |
          echo "${{ secrets.SPRING_BOOT_APPLICATION_PROPERTIES }}" > deployment/templates/application-live.properties

      - name: Build kustomize deployment config
        run: ./deployment/deployment.sh

      - name: apply deloyment
        uses: actions-hub/kubectl@v1.26.0
        env:
          KUBE_CONFIG: ${{ secrets.K8S_CONFIG }}
        with:
          args: apply -f deployment/prod.yml
