name: Build

on:
  push:
    branches: [master]
  pull_request:

jobs:
  api-build:
    name: Build backend 🏗️
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: 17

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Build backend
        run: ./gradlew bootJar

      - name: Tar build
        run: tar -czf ~/backend.tgz ./build

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: backend
          path: |
            ~/backend.tgz

  backend-test:
    name: Test backend 🧪
    needs: [api-build]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: 17

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Test backend
        run: ./gradlew test

  backend-docker:
    name: Backend docker 🐬
    needs: [backend-test]
    runs-on: ubuntu-latest
    steps:
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV
      - uses: actions/checkout@v2

      - name: Download backend build result
        uses: actions/download-artifact@v2
        with:
          name: backend
          path: ~/

      - name: Untar it
        run: |
          tar -xzf ~/backend.tgz ./build
      - name: list
        run: |
          sudo tree -a

      - uses: docker/setup-buildx-action@v2

      - name: Docker Login
        uses: docker/login-action@v2.0.0
        with:
          registry: docker.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          push: true
          tags: docker.io/xlepex/graph-api:${{ steps.short-sha.outputs.sha }}
          build-args: |
            GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
            GIT_COMMIT=${{ steps.short-sha.outputs.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
